*** Makefile.in.orig	2021-03-08 14:07:56.717317738 -0500
--- Makefile.in	2021-03-08 14:31:34.515636681 -0500
***************
*** 205,211 ****
  @WITH_RPC_TRUE@	rpc_rquotad-rquota_server.$(OBJEXT) \
  @WITH_RPC_TRUE@	rpc_rquotad-rquota_svc.$(OBJEXT) \
  @WITH_RPC_TRUE@	rpc_rquotad-svc_socket.$(OBJEXT)
! rpc_rquotad_OBJECTS = $(am_rpc_rquotad_OBJECTS)
  @WITH_RPC_TRUE@rpc_rquotad_DEPENDENCIES = libquota.a \
  @WITH_RPC_TRUE@	$(am__DEPENDENCIES_1) $(RPCLIBS) \
  @WITH_RPC_TRUE@	$(am__DEPENDENCIES_1)
--- 205,211 ----
  @WITH_RPC_TRUE@	rpc_rquotad-rquota_server.$(OBJEXT) \
  @WITH_RPC_TRUE@	rpc_rquotad-rquota_svc.$(OBJEXT) \
  @WITH_RPC_TRUE@	rpc_rquotad-svc_socket.$(OBJEXT)
! rpc_rquotad_OBJECTS = $(am_rpc_rquotad_OBJECTS) getzfsinfo.o
  @WITH_RPC_TRUE@rpc_rquotad_DEPENDENCIES = libquota.a \
  @WITH_RPC_TRUE@	$(am__DEPENDENCIES_1) $(RPCLIBS) \
  @WITH_RPC_TRUE@	$(am__DEPENDENCIES_1)
***************
*** 744,749 ****
--- 744,750 ----
  @WITH_RPC_TRUE@rpc_rquotad_CFLAGS = $(TIRPC_CFLAGS)
  @WITH_RPC_TRUE@rpc_rquotad_LDADD = \
  @WITH_RPC_TRUE@	libquota.a \
+ @WITH_RPC_TRUE@	-lzfs \
  @WITH_RPC_TRUE@	$(WRAP_LIBS) \
  @WITH_RPC_TRUE@	$(RPCLIBS) \
  @WITH_RPC_TRUE@	$(TIRPC_LIBS)
***************
*** 1018,1023 ****
--- 1019,1029 ----
  
  am--depfiles: $(am__depfiles_remade)
  
+ getzfsinfo: getzfsinfo.c
+ 	gcc -DMAIN -o getzfsinfo -I/usr/include/libzfs -I/usr/include/libspl getzfsinfo.c -lzfs
+ getzfsinfo.o: getzfsinfo.c
+ 	gcc -c -I/usr/include/libzfs -I/usr/include/libspl getzfsinfo.c -lzfs
+ 
  .c.o:
  @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
  @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po


*** rquota_server.c.orig	2020-10-21 10:29:25.041909562 -0400
--- rquota_server.c	2020-10-21 15:30:53.227087277 -0400
***************
*** 55,60 ****
--- 55,72 ----
  
  extern char nfs_pseudoroot[PATH_MAX];
  
+ struct zfsinfo {
+   
+  unsigned long ihardlimit;
+  unsigned long isoftlimit;
+  unsigned long curinodes;
+  unsigned long bhardlimit;
+  unsigned long bsoftlimit;
+  unsigned long curspace;
+ };
+   
+ extern int getzfsinfo (char *filesys, uid_t uid, struct zfsinfo *zp);
+ 
  /*
   * Global unix authentication credentials.
   */
***************
*** 153,234 ****
  	char *pathp = pathname;
  	int id, qcmd, type;
  	struct quota_handle *handles[2] = { NULL, NULL };
- 
- 	/*
- 	 * First check authentication.
- 	 */
- 	if (lflags & TYPE_EXTENDED) {
- 		arguments.ext_args = (ext_setquota_args *) argp;
- 
- 		id = arguments.ext_args->sqa_id;
- 		if (unix_cred->aup_uid != 0) {
- 			result.status = Q_EPERM;
- 			return (&result);
- 		}
- 
- 		qcmd = arguments.ext_args->sqa_qcmd;
- 		type = arguments.ext_args->sqa_type;
- 		if (arguments.ext_args->sqa_pathp[0] != '/')
- 			sstrncpy(pathname, nfs_pseudoroot, PATH_MAX);
- 		sstrncat(pathname, arguments.ext_args->sqa_pathp, PATH_MAX);
- 		servnet2utildqblk(&dqblk, &arguments.ext_args->sqa_dqblk);
- 	}
- 	else {
- 		arguments.args = (setquota_args *) argp;
- 
- 		id = arguments.args->sqa_id;
- 		if (unix_cred->aup_uid != 0) {
- 			result.status = Q_EPERM;
- 			return (&result);
- 		}
- 
- 		qcmd = arguments.args->sqa_qcmd;
- 		type = USRQUOTA;
- 		if (arguments.args->sqa_pathp[0] != '/')
- 			sstrncpy(pathname, nfs_pseudoroot, PATH_MAX);
- 		sstrncat(pathname, arguments.args->sqa_pathp, PATH_MAX);
- 		servnet2utildqblk(&dqblk, &arguments.args->sqa_dqblk);
- 	}
- 
- 	result.status = Q_NOQUOTA;
- 	result.setquota_rslt_u.sqr_rquota.rq_bsize = RPC_DQBLK_SIZE;
- 
- 	if (init_mounts_scan(1, &pathp, MS_QUIET | MS_NO_MNTPOINT | MS_NFS_ALL | ((flags & FL_AUTOFS) ? 0 : MS_NO_AUTOFS)) < 0)
- 		goto out;
- 	if (!(mnt = get_next_mount())) {
- 		end_mounts_scan();
- 		goto out;
- 	}
- 	if (!(handles[0] = init_io(mnt, type, -1, 0))) {
- 		end_mounts_scan();
- 		goto out;
- 	}
- 	end_mounts_scan();
- 	if (!(dquot = handles[0]->qh_ops->read_dquot(handles[0], id)))
- 		goto out;
- 	if (qcmd == QCMD(Q_RPC_SETQLIM, type) || qcmd == QCMD(Q_RPC_SETQUOTA, type)) {
- 		dquot->dq_dqb.dqb_bsoftlimit = dqblk.dqb_bsoftlimit;
- 		dquot->dq_dqb.dqb_bhardlimit = dqblk.dqb_bhardlimit;
- 		dquot->dq_dqb.dqb_isoftlimit = dqblk.dqb_isoftlimit;
- 		dquot->dq_dqb.dqb_ihardlimit = dqblk.dqb_ihardlimit;
- 		dquot->dq_dqb.dqb_btime = dqblk.dqb_btime;
- 		dquot->dq_dqb.dqb_itime = dqblk.dqb_itime;
- 	}
- 	if (qcmd == QCMD(Q_RPC_SETUSE, type) || qcmd == QCMD(Q_RPC_SETQUOTA, type)) {
- 		dquot->dq_dqb.dqb_curspace = dqblk.dqb_curspace;
- 		dquot->dq_dqb.dqb_curinodes = dqblk.dqb_curinodes;
- 	}
- 	if (handles[0]->qh_ops->commit_dquot(dquot, COMMIT_LIMITS) == -1) {
- 		free(dquot);
- 		goto out;
- 	}
- 	free(dquot);
- 	result.status = Q_OK;
- out:
- 	dispose_handle_list(handles);
- #else
- 	result.status = Q_EPERM;
  #endif
  	return (&result);
  }
  
--- 165,172 ----
  	char *pathp = pathname;
  	int id, qcmd, type;
  	struct quota_handle *handles[2] = { NULL, NULL };
  #endif
+ 	result.status = Q_EPERM;
  	return (&result);
  }
  
***************
*** 242,250 ****
--- 180,191 ----
  	struct dquot *dquot = NULL;
  	struct mount_entry *mnt;
  	char pathname[PATH_MAX] = {0};
+ 	char fixedpath[PATH_MAX] = {0};
  	char *pathp = pathname;
  	int id, type;
  	struct quota_handle *handles[2] = { NULL, NULL };
+ 	struct util_dqblk dq_dqb;
+ 	struct zfsinfo zfsinfo;
  
  	/*
  	 * First check authentication.
***************
*** 284,311 ****
  
  	result.status = Q_NOQUOTA;
  
! 	if (init_mounts_scan(1, &pathp, MS_QUIET | MS_NO_MNTPOINT | MS_NFS_ALL | ((flags & FL_AUTOFS) ? 0 : MS_NO_AUTOFS)) < 0)
! 		goto out;
! 	if (!(mnt = get_next_mount())) {
! 		end_mounts_scan();
! 		goto out;
! 	}
! 	if (!(handles[0] = init_io(mnt, type, -1, IOI_READONLY))) {
! 		end_mounts_scan();
! 		goto out;
! 	}
! 	end_mounts_scan();
! 	if (!(lflags & ACTIVE) || QIO_ENABLED(handles[0]))
! 		dquot = handles[0]->qh_ops->read_dquot(handles[0], id);
! 	if (dquot) {
! 		result.status = Q_OK;
! 		result.getquota_rslt_u.gqr_rquota.rq_active =
! 			QIO_ENABLED(handles[0]) ? TRUE : FALSE;
! 		servutil2netdqblk(&result.getquota_rslt_u.gqr_rquota, &dquot->dq_dqb);
! 		free(dquot);
! 	}
  out:
- 	dispose_handle_list(handles);
  	return (&result);
  }
  
--- 225,249 ----
  
  	result.status = Q_NOQUOTA;
  
! 	result.status = Q_OK;
! 	result.getquota_rslt_u.gqr_rquota.rq_active = TRUE;
! 	
! 	if (getzfsinfo (pathname, id, &zfsinfo) != 0) {
! 	  	result.status = Q_NOQUOTA;
! 		return (&result);
! 	}
! 
! 	dq_dqb.dqb_ihardlimit = zfsinfo.ihardlimit;
! 	dq_dqb.dqb_isoftlimit = zfsinfo.isoftlimit;
! 	dq_dqb.dqb_curinodes = zfsinfo.curinodes;
! 	dq_dqb.dqb_bhardlimit = zfsinfo.bhardlimit;
! 	dq_dqb.dqb_bsoftlimit = zfsinfo.bsoftlimit;
! 	dq_dqb.dqb_curspace = zfsinfo.curspace;
! 	dq_dqb.dqb_btime = 0;
! 	dq_dqb.dqb_itime = 0;
! 	servutil2netdqblk(&result.getquota_rslt_u.gqr_rquota, &dq_dqb);
! 
  out:
  	return (&result);
  }
  
