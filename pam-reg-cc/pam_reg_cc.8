.TH PAM_REG_CC 8
.SH NAME
pam_reg_cc \- register credential caches for renewd
.SH DESCRIPTION
.I  pam_reg_cc [usecollection]
checks the current value of KRB5CCNAME in the environment that
PAM is preparing for the user process. If it is defined, 
pam_reg_cc registers the cache that was just created for
renewd to renew automatically. 
.PP
It has one additional function, which is only necessary where
sssd is being used with IPA, and local UIDs don't agree with those
in IPA. In some a situation, sssd will create Kerberos credentials
for the UID listed in IPA, but the user will be logged in with 
the UID in /etc/passwd. They'll be unable to read their own
credentials, because the cache will be owned by the wrong user.
pam_reg_cc will copy the credentials to a cached owned by the
right user and update KRB5CCNAME. Normally this is done by
the session function. However if you using Google authenticator,
correct credentials will be needed to read the Google config file.
In that case, you'll need to call pam_reg_cc as an auth module,
after sssd but before Google authenticator. Otherwise, this
function will be performed in the session module, along
with the rest of the functionality of this module.
.PP
KRB5CCNAME is sometimes set
to the default collection, rather than to the specific cache.
That can require pam_reg_cc to guess which cache was actually
just created. It will pick a cache from the collection that
has the user's main principal. That's the same cache that sssd
uses, so it should be the right one.
.PP
If usecollection is specified, and the cache is in KEYRING, strips
any subsidiary name. E.g if it is KEYRING:persistent:1003:1003,
although that name will be registered for renewd, the environment
variable will be updated to KEYRING:persistent:1003. This will 
allow kinit, klist, and kdestroy to work as intended with collections.
.PP
In general we recommend setting default_ccache_name in krb5.conf to
KEYRING:persistent:%{uid}, and setting usecollection. 
.PP
When used with NFS, there can be issues if the user kinits as another
principal. Kinit changes the primary cache to the one just set up.
However NFS expects the primary cache to be set to one with the user's
default principal. If someone is working with a different cache (e.g. one
with an administrative credential) this can result in NFS accesses failing,
should NFS choose to recheck credentials at that time.
.PP
For that reason, you may request this module to copy the credential to
a second location. That way changes to the primary cache won't affect
NFS access. The obvious place to copy it is a file in /tmp or /run/user/%U.
There are the places where rpc.gssd looks for credentials for NFS. However
you can put it in other locations, and use the -d option to rpc.gssd.
There are two reasonable locations: a file in /tmp,
To make this happen,
configure krb5.conf with credcopy, e.g.
.PP
.nf
[appdefaults]
register-cc = {
    credcopy = /tmp/krb5cc_nfs_%U
}
.fi
.PP
Like gssproxy, this module will replace %U with the user's numeric userid, and %u with the username. 
.PP
The path should end in %U. It shouldn't be the same as any paths used
for other purposes. E.g. if
you're using krb5cc_%U for normal user credentials, you need to use a 
path with something other than kr5cc_ before the %U. krb5cc_nfs_%U meets
that requirement.
.PP
This module implements only session start (and a no-op session end).
.PP
If this module is being used in a system with renewd, you may want to warn users if the
credentials forwarded to them have too short a lifetime to be renewed. To warn if there
is less than 55 min left use. You may also want to specify ticket_warn_file, which is
a file with the text of the warning message to be printed. There's default text in case
it isn't specified, but this lets you specify your own.
.PP
.nf
[appdefaults]
register-cc = {
    ticket_minlife = 55m
    ticket_warn_file = /etc/krb5.ticketwarning
}
.fi
.PP
