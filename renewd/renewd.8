.TH RENEWD 8
.SH NAME
renewd \- renew Kerberos credentials for all users automatically
.SH SYNOPSIS
.B renewd
[-w waittime][ -d ]
.SH DESCRIPTION
.I  renewd
renews credentials for all users with processes currently active.
It is part of a specific strategy to keep users from losing credentials
or NFS access. The design of sshd, login, libkrb5 and rpc.gssd do
not allow for completely transparent use of Kerberos without agreeing on
some rules.
.PP 
Because multiple login sessions (particularly via sshd) can share the 
same credemtials, you don't do kdestroy on logout, nor can you allow sshd
to do it via GSSAPICleanupCredentials. To avoid having credentials hang
out too long, we are going to set ticket_lifetime in krb5.conf fairly short.
The default parameters for renewd assume it's about an hour. That way
credentials will go away within an hour after logout, but will be renewed
automatically while you're logged in.
.PP 
If we can be sure that credentaisl won't be destroyed, then renewd
can simply keep renewing all active credentials while the user still
has a session alive, with one exception: 
.PP
Because reading and writing credential files is not atomic, there is
a period during renewal when the credentials are not valid. In principle
that could cause trouble to NFS. In practice it probably won't, because
NFS only reevaluates the credentials when they expire. However for safety's
sake, before renewing the first cache for a given user, we create
a temporary cache in /tmp/krb5cc_NNN-renew, with renewed credentials.
That temporary cache is deleted 1 minute after renewd finishes its renewals.
.PP
For NFS to work reliably I suggest the following conventions:
.PP
All interactive should use the default,
which is KEYRING:persistent:UID. That will mean they all share one
credential file, the primary. They should not do kdestroy or otherwise
destroy the file at logout unless you're sure there's only one sessoin.
.PP
Cron jobs can share this. The easiest way is to start them
with kgetcred without setting KRB5CCNAME. However if you want
a cron job (or even a session) to use a different credential file,
it should be in /tmp, named /tmp/krb5cc_NNN
or /tmp/krb5cc_NNN_XXX, where NNN is the user's UID. XXX can be anything
(including the normal 6-character random sequence). Credentials in
/tmp should be kdestroyed at the end of the session or job.
.PP
For this to work, renewd has to renew the primary cache in KEYRING,
and all caches matching /tmp/krb5cc_NNN[_XXX].
Initially we're not going to remove expired caches (though I'm 
considering that), but a normal /tmp file pruner can do that.
.PP
waittime is the amount of time between successive runs. It defaults
to 50 minutes, which is appropriate for a default ticket lifetime of 1 hour.
.PP
renewd normally detaches from the terminal, and logs to syslog.
If -d is supplied it remains attached to the terminal, and prints
debug and error messasges there. -d can be given more than once
to increase the level of debugging.
.PP
renewd must run as root. Most Kerberos operations are performed as
the user that owns the cache.
