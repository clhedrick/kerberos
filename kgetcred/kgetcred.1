.TH KGETCRED 1
.SH NAME
kgetcred \- get Kerberos credentials from keytab stored on credserv server
.SH SYNOPSIS
.B kgetcred
[ -d | -a | -l | -r | -P | -U user] [principal]
.SH DESCRIPTION
.I  kgetcred
is designed for cron jobs or services that need access to Kerberos
credentials, but don't have an interactive user to supply them.
Kgetcred sends a request to a credserv server running on the 
host specified in /etc/kgetcred.conf. If successful a Kerberos
TGT is put into the user's default credentials cache.
.PP
If successful, it prints the name of a cache. This can be used
in a script, e.g. KRB5CCNAME=`kgetcred`
.PP
In case of error, a message is printed and exit with code 1.
.PP
Kgetcred must be installed setuid, because it has to read /etc/krb5.keytab to authenticate.
It will drop privileges as soon as it's read the key table.
.PP
Note that there is a pam version of this, pam_kgetcred. We expect that this will be installed
for cron. In that case most users won't need to call kgetcred from their jobs. They'll just
need the -r and -u options to register keytables on the server.
.SH OPTIONS
.TP
.B \-d
print debugging messages
.TP
.B \-a
get credentials for anonymous.user. Primarily intended for kinit -T, until IPA supports kinit -n.
Requires a keytable for anonymous.user on the server.
.TP
.B \-l
list the hosts and principals that can be used by this user. Currently not supported for root, so the principal will
always be the current user's primary one. User must be logged in with Kerberos credential.
.TP
.B \-r
register this current user to be able to use kgetcred on this host.
Prompts for password. Because this function has a significant effect upon the user's security,
we don't want to use credentials that might have been lying around for hours. Hence we ask
for a new login.
.TP
.B \-u
unregister this current user to be able to use kgetcred on this host.
Prompts for a password. See above.
.TP
.B principal
for root, a principal must be specified. Root can have multiple principals available for a host.
.SH Privileged operations
The following functions work only if a user has privileges.
.TP
.B \-P
use privileges. This will cause the operation not to prompt for a password, but will use existing credentials.
The reason is the privileged users will probably have one-time passwords, and our code
can't handle them. We trust that privileged users will destroy their credentials when no
longer needed. Note that if a normal user does this, the operation will probably fail.
.TP
.B \-U user
The current operation applies to that user.
.TP
.B \-H host
For register and unregister, the specified host will be registered rather than the current host.
.PP
Be careful when acting as a privileged user. If you forget to specify -l, -r or -u, the default will be
to get credentials. That will replace your current credentials.
.SH "SEE ALSO"
credserv(8)
